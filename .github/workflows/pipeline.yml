# The name of the workflow.
name: Build and Deploy

# Run the workflow when code is pushed to the main branch
on:
  push:
    branches:
      - main

# Set environment variables
env:
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  SECRET: ${{ secrets.SECRET }}

# This is the workflow that is being run.
jobs:
  build-and-deploy:
    # This is telling GitHub to run the workflow on the latest version of Ubuntu.
    runs-on: ubuntu-latest
    steps:
      # # Checkout the code from the GitHub repository
      # - name: Checkout code
      #   uses: actions/checkout@v2

      # # Install dependencies and run tests for the frontend application
      # - name: Install and Test frontend
      #   working-directory: ./frontend
      #   run: |
      #     npm install

      # # Install dependencies, export environment variables to be used by application and run tests for the backend application
      # - name: Install and Test backend
      #   working-directory: ./backend
      #   run: |
      #     npm install
      #     export MONGO_URI=$MONGODB_URI
      #     export SECRET=$SECRET

      # # Build a Docker image for the frontend application
      # - name: Build frontend Docker Image
      #   working-directory: ./frontend
      #   run: |
      #     docker build -t rj2332/mern-app:frontend .

      # # Build a Docker image for the backend application
      # - name: Build backend Docker Image
      #   working-directory: ./backend
      #   run: |
      #     docker build -t rj2332/mern-app:backend .

      # # Login to Docker Hub using credentials from repository secrets
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # # Push the Docker images to Docker Hub
      # - name: Push Docker Images to Docker Hub
      #   run: |
      #     docker push rj2332/mern-app:frontend
      #     docker push rj2332/mern-app:backend
      
      - name: Checkout 
        uses: actions/checkout@v3

      - name: Run Ansible playbook
        uses: dawidd6/action-ansible-playbook@v2.5.0
        with:
          playbook: deploy.yml # path to your Ansible playbook
          directory: ./
          key: ${{ secrets.SSH_PRIVATE_KEY }} # the ssh private key for ansible to use to connect to the servers, stored as "ansible_ssh_private_key" in the GitHub secrets
          inventory: ${{ secrets.ANSIBLE_INVENTORY }} # the ansible inventory to use, stored as "ansible_inventory" in the GitHub secrets

      


# //ACTUAL YAML FILE
# # The name of the workflow.
# name: Build and Deploy

# # Run the workflow when code is pushed to the main branch
# on:
#   push:
#     branches:
#       - main

# # Set environment variables
# env:
#   MONGODB_URI: ${{ secrets.MONGODB_URI }}
#   TOKEN_KEY: ${{ secrets.TOKEN_KEY }}
#   EMAIL: ${{ secrets.EMAIL }}
#   PASSWORD: ${{ secrets.PASSWORD }}

# # This is the workflow that is being run.
# jobs:
#   build-and-deploy:
#     # This is telling GitHub to run the workflow on the latest version of Ubuntu.
#     runs-on: ubuntu-latest
#     steps:
#       # Checkout the code from the GitHub repository
#       - name: Checkout code
#         uses: actions/checkout@v2

#       # Install dependencies and run tests for the client application
#       - name: Install and Test Client
#         working-directory: ./client
#         run: |
#           npm install
#           npm run test

#       # Install dependencies, export environment variables to be used by application and run tests for the server application
#       - name: Install and Test Server
#         working-directory: ./server
#         run: |
#           npm install
#           export MONGODB_URI=$MONGODB_URI
#           export TOKEN_KEY=$TOKEN_KEY
#           export EMAIL=$EMAIL
#           export PASSWORD=$PASSWORD
#           npm run test

#       # Build a Docker image for the client application
#       - name: Build Client Docker Image
#         working-directory: ./client
#         # Build image with tag rakeshpotnuru/productivity-app:client
#         run: |
#           docker build -t rakeshpotnuru/productivity-app:client-${{github.run_number}} .

#       # Build a Docker image for the server application
#       - name: Build Server Docker Image
#         working-directory:
#           ./server
#           # Build image with tag rakeshpotnuru/productivity-app:server
#         run: |
#           docker build -t rakeshpotnuru/productivity-app:server-${{github.run_number}} .

#       # Login to Docker Hub using credentials from repository secrets
#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       # Push the Docker images to Docker Hub
#       - name: Push Docker Images to Docker Hub
#         run: |
#           docker push rakeshpotnuru/productivity-app:client-${{github.run_number}}
#           docker push rakeshpotnuru/productivity-app:server-${{github.run_number}}